/* Function to return maximum product of a sub-array of given array */
public int maxProduct(int[] nums) {
  if (nums == null || nums.length == 0) return 0;
  if (nums.length == 1) return nums[0];
  int maxEnding = 0, minEnding = 0, maxSoFar = 0;
  for (int i: nums) {
    int temp = maxEnding;
    maxEnding = Math.max(i, Math.max(i * maxEnding, i * minEnding));
    minEnding = Math.min(i, Math.min(i * temp, i * minEnding));
    maxSoFar = Math.max(maxSoFar, maxEnding);
  }
  return maxSoFar;
}

I/O :

Input: nums[] = [6, -3, -10, 0, 2] 
Output: 180 
Explanation: [6, -3, -10] has the largest product 180.

Input: [-5,0,-6]
Output: 0
Explanation: The result cannot be (-5 x -6)=30, because [-5,-6] is not a subarray.
